{"version":3,"sources":["src/screens/Logout/index.js","node_modules/lodash/_assignMergeValue.js","node_modules/lodash/_safeGet.js","src/utils/apollo/useClient.js","src/utils/apollo/index.js","node_modules/lodash/merge.js","src/utils/useLoginRedirect/index.js","node_modules/lodash/_baseMerge.js","node_modules/lodash/_baseMergeDeep.js","node_modules/lodash/toPlainObject.js","node_modules/lodash/_createAssigner.js","node_modules/lodash/_isIterateeCall.js"],"names":["Logout","refetch","props","client","useClient","redirect","useLoginRedirect","useState","status","setStatus","setTimeout","a","async","storage","set","clearStore","waitTime","waitFor","Object","keys","getCacheData","length","baseAssignValue","eq","module","exports","object","key","value","undefined","useContext","Context","INITIAL_USER_CURRENT_DATA","me","__typename","id","firstName","lastName","fullName","phone","mobile","email","image","role","updatedAt","mock","profile","params","userId","placeholder","menu","label","ROOT_QUERY","type","json","generated","typename","baseMerge","merge","createAssigner","source","srcIndex","location","history","search","pathname","query","queryString","parse","regex","RegExp","replace","url","decodeURIComponent","test","getUrl","clear","Stack","assignMergeValue","baseFor","baseMergeDeep","isObject","keysIn","safeGet","customizer","stack","srcValue","newValue","cloneBuffer","cloneTypedArray","copyArray","initCloneObject","isArguments","isArray","isArrayLikeObject","isBuffer","isFunction","isPlainObject","isTypedArray","toPlainObject","mergeFunc","objValue","stacked","get","isCommon","isArr","isBuff","isTyped","copyObject","baseRest","isIterateeCall","assigner","sources","index","guard","isArrayLike","isIndex"],"mappings":"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","file":"static/js/7.fb603d98.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport storage from '../../utils/storage';\nimport { useClient } from '../../utils/apollo';\nimport { waitFor, waitTime } from '../../utils/wait';\nimport useLoginRedirect from '../../utils/useLoginRedirect';\nimport Splash from '../../components/Splash';\n\nconst Logout = ({ refetch, ...props }) => {\n  const client = useClient();\n  const redirect = useLoginRedirect(props);\n  const [status, setStatus] = useState('SIGNED_IN');\n\n  if (status === 'SIGNED_IN') {\n    setTimeout(async () => {\n      setStatus('SIGNING_OUT');\n      await storage.set('jwt', '');\n      await client.clearStore();\n      await waitTime(1000);\n      await refetch();\n      await waitFor(() => !!Object.keys(client.getCacheData()).length);\n      await waitTime(100);\n      redirect();\n    });\n  }\n  return <Splash />;\n};\n\nLogout.propTypes = {\n  refetch: PropTypes.func.isRequired,\n};\n\nexport default Logout;\n","var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignMergeValue;\n","/**\n * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction safeGet(object, key) {\n  if (key === 'constructor' && typeof object[key] === 'function') {\n    return;\n  }\n\n  if (key == '__proto__') {\n    return;\n  }\n\n  return object[key];\n}\n\nmodule.exports = safeGet;\n","import { useContext } from 'react';\nimport Context from './Context';\n\nconst useClient = () => useContext(Context);\n\nexport default useClient;\n","export { default as Context } from './Context';\nexport { default as createClient } from './createClient';\nexport { default as useClient } from './useClient';\nexport { default as useComposed } from './useComposed';\nexport { default as withClient } from './withClient';\n\nexport const INITIAL_USER_CURRENT_DATA = {\n  me: {\n    __typename: 'user',\n    id: 3,\n    firstName: null,\n    lastName: null,\n    fullName: '',\n    phone: null,\n    mobile: null,\n    email: null,\n    image: null,\n    role: 'VISITOR',\n    updatedAt: '2020-01-01T00:00:00.000Z',\n    mock: true,\n  },\n  profile: {\n    __typename: 'profile',\n    id: 3,\n    params: { userId: 3 },\n    placeholder: 'Menu',\n    menu: [\n      { key: 'Home', label: 'Home' },\n      { key: 'Login', label: 'Login' },\n      { key: 'Signup', label: 'Sign Up' },\n      { key: 'ContactUs', label: 'Contact Us' },\n    ],\n  },\n};\n\nexport const INITIAL_STATE = {\n  ROOT_QUERY: {\n    'profile({\"with\":{}})': {\n      type: 'json',\n      json: INITIAL_USER_CURRENT_DATA.profile,\n    },\n    'me({\"with\":{}})': {\n      type: 'id',\n      generated: false,\n      id: `user:${INITIAL_USER_CURRENT_DATA.me.id}`,\n      typename: 'user',\n    },\n  },\n};\nINITIAL_STATE[`user:${INITIAL_USER_CURRENT_DATA.me.id}`] = INITIAL_USER_CURRENT_DATA.me;\n","var baseMerge = require('./_baseMerge'),\n    createAssigner = require('./_createAssigner');\n\n/**\n * This method is like `_.assign` except that it recursively merges own and\n * inherited enumerable string keyed properties of source objects into the\n * destination object. Source properties that resolve to `undefined` are\n * skipped if a destination value exists. Array and plain object properties\n * are merged recursively. Other objects and value types are overridden by\n * assignment. Source objects are applied from left to right. Subsequent\n * sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {\n *   'a': [{ 'b': 2 }, { 'd': 4 }]\n * };\n *\n * var other = {\n *   'a': [{ 'c': 3 }, { 'e': 5 }]\n * };\n *\n * _.merge(object, other);\n * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n */\nvar merge = createAssigner(function(object, source, srcIndex) {\n  baseMerge(object, source, srcIndex);\n});\n\nmodule.exports = merge;\n","import queryString from 'query-string';\nimport getUrl from '../getUrl';\n\nconst useLoginRedirect = ({ location, history }) => {\n  const { search, pathname } = location;\n\n  const redirect = () => {\n    const query = queryString.parse(search);\n    const regex = new RegExp(`^${pathname.replace(/\\//g, '\\\\/')}`);\n    let url = query.redirect && decodeURIComponent(query.redirect);\n    if (!url || regex.test(url)) {\n      url = getUrl('/');\n    }\n    history.clear();\n    history.replace(url);\n  };\n\n  return redirect;\n};\n\nexport default useLoginRedirect;\n","var Stack = require('./_Stack'),\n    assignMergeValue = require('./_assignMergeValue'),\n    baseFor = require('./_baseFor'),\n    baseMergeDeep = require('./_baseMergeDeep'),\n    isObject = require('./isObject'),\n    keysIn = require('./keysIn'),\n    safeGet = require('./_safeGet');\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    stack || (stack = new Stack);\n    if (isObject(srcValue)) {\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\nmodule.exports = baseMerge;\n","var assignMergeValue = require('./_assignMergeValue'),\n    cloneBuffer = require('./_cloneBuffer'),\n    cloneTypedArray = require('./_cloneTypedArray'),\n    copyArray = require('./_copyArray'),\n    initCloneObject = require('./_initCloneObject'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLikeObject = require('./isArrayLikeObject'),\n    isBuffer = require('./isBuffer'),\n    isFunction = require('./isFunction'),\n    isObject = require('./isObject'),\n    isPlainObject = require('./isPlainObject'),\n    isTypedArray = require('./isTypedArray'),\n    safeGet = require('./_safeGet'),\n    toPlainObject = require('./toPlainObject');\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer\n    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n    : undefined;\n\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n        isBuff = !isArr && isBuffer(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n    newValue = srcValue;\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      }\n      else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      }\n      else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      }\n      else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      }\n      else {\n        newValue = [];\n      }\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      }\n      else if (!isObject(objValue) || isFunction(objValue)) {\n        newValue = initCloneObject(srcValue);\n      }\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n  assignMergeValue(object, key, newValue);\n}\n\nmodule.exports = baseMergeDeep;\n","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return copyObject(value, keysIn(value));\n}\n\nmodule.exports = toPlainObject;\n","var baseRest = require('./_baseRest'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nmodule.exports = createAssigner;\n","var eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n"],"sourceRoot":""}